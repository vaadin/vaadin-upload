{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAqBA;gBAOE,iBAAY,CAAa,EAAE,GAAsB;oBAH1C,YAAO,GAAG,KAAK,CAAC;oBAChB,UAAK,GAAG,EAAE,CAAC;oBAGhB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC;oBAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBAClB,CAAC;gBAED,iCAAe,GAAf;oBACE,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,eAAe,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAClC,CAAC;gBAEM,+BAAa,GAApB;oBACE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBAC5B,CAAC;gBApCH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,+ZAYP;wBACH,UAAU,EAAE,CAAC,4BAAY,CAAC;qBAC3B,CAAC;;2BAAA;gBAqBF,cAAC;YAAD,CApBA,AAoBC,IAAA;YApBD,6BAoBC,CAAA;YAED,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;gBAC1C,mBAAS,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["import {bootstrap}    from 'angular2/platform/browser';\nimport {Component, Output, ElementRef, ChangeDetectorRef} from 'angular2/core';\nimport {VaadinUpload} from '../../directives/vaadin-upload';\n\n@Component({\n  selector: 'test-app',\n  template: `\n    <form>\n      <vaadin-upload [(files)]=\"files\" ngControl=\"upload\" required>Text content</vaadin-upload>\n    </form>\n    <vaadin-upload id=\"structural\">\n      <div class=\"drop-label\">\n        <span *ngIf=\"visible\">Content for drop-label</span>\n      </div>\n      <div class=\"file-list\">\n        <span *ngIf=\"visible\">Content for file-list</span>\n      </div>\n    </vaadin-upload>\n    `,\n  directives: [VaadinUpload]\n})\nexport class TestApp {\n\n  private _host;\n  private _ref;\n  public visible = false;\n  public files = [];\n\n  constructor(e: ElementRef, ref: ChangeDetectorRef) {\n    this._host = e.nativeElement;\n    this._ref = ref;\n  }\n\n  ngAfterViewInit() {\n    var event = new CustomEvent('readyForTests', {detail: this});\n    this._host.dispatchEvent(event);\n  }\n\n  public detectChanges() {\n    this._ref.detectChanges();\n  }\n}\n\ndocument.body.addEventListener('bootstrap', () => {\n  bootstrap(TestApp);\n});\n"],"sourceRoot":"/source/"}